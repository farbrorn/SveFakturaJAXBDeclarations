//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.06 at 06:07:59 em CEST 
//


package oasis.names.tc.ubl.codelist.operatorcode._1._0;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OperatorCodeContentType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="OperatorCodeContentType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Divide"/>
 *     &lt;enumeration value="Multiply"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "OperatorCodeContentType")
@XmlEnum
public enum OperatorCodeContentType {


    /**
     * 
     *             
     * <pre>
     * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;CodeName xmlns="urn:oasis:names:tc:ubl:codelist:OperatorCode:1:0" xmlns:ccts="urn:oasis:names:tc:ubl:CoreComponentParameters:1:0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;Divide&lt;/CodeName&gt;
     * </pre>
     * 
     *           
     * 
     */
    @XmlEnumValue("Divide")
    DIVIDE("Divide"),

    /**
     * 
     *             
     * <pre>
     * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;CodeName xmlns="urn:oasis:names:tc:ubl:codelist:OperatorCode:1:0" xmlns:ccts="urn:oasis:names:tc:ubl:CoreComponentParameters:1:0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;Multiply&lt;/CodeName&gt;
     * </pre>
     * 
     *           
     * 
     */
    @XmlEnumValue("Multiply")
    MULTIPLY("Multiply");
    private final String value;

    OperatorCodeContentType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OperatorCodeContentType fromValue(String v) {
        for (OperatorCodeContentType c: OperatorCodeContentType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
